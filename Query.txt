SELECT e.NOMBRE, e.SALARIO - COALESCE((SELECT SUM(f.ABONO) FROM faltantes f WHERE f.NOMBRE = e.NOMBRE), 0) - COALESCE((SELECT SUM(f.FALTANTE) FROM faltantes f WHERE f.NOMBRE = e.NOMBRE), 0) AS salario_actualizado
FROM empleados e;


SELECT SUM(FALTANTE - ABONO) FROM faltantes

SELECT e.NOMBRE, e.SALARIO - COALESCE((SELECT SUM(f.FALTANTE) FROM faltantes f WHERE f.NOMBRE = e.NOMBRE), 0) + COALESCE((SELECT SUM(f.ABONO) FROM faltantes f WHERE f.NOMBRE = e.NOMBRE), 0) AS salario_actualizado
FROM empleados e;


SELECT e.NOMBRE, 
       COALESCE((SELECT SUM(f.FALTANTE) FROM faltantes f WHERE f.NOMBRE = e.NOMBRE), 0) AS TOTAL_FALTANTES,
       COALESCE((SELECT SUM(f.ABONO) FROM faltantes f WHERE f.NOMBRE = e.NOMBRE), 0) AS TOTAL_ABONOS,
       e.SALARIO - COALESCE((SELECT SUM(f.FALTANTE) FROM faltantes f WHERE f.NOMBRE = e.NOMBRE), 0) + COALESCE((SELECT SUM(f.ABONO) FROM faltantes f WHERE f.NOMBRE = e.NOMBRE), 0) AS SALARIO_NETO 
FROM empleados e;


SELECT FECHA, NOMBRE, BANCA, ABONO, FALTANTE
FROM faltantes
UNION ALL
SELECT 'TOTAL', '', '', SUM(ABONO), SUM(FALTANTE)
FROM faltantes
GROUP BY 'TOTAL'


model.setFilter("strftime('%Y-%m-%d', fecha_registro) = (SELECT strftime('%Y-%m-%d', MAX(fecha_registro)) FROM faltantes) ORDER BY fecha_registro DESC LIMIT 1")



